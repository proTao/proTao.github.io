可能的问题：
1. 介绍一下你自己
关于这个问题的回答有两个大忌——谈论你在大学的 GPA 或详细介绍自己的项目。理想的回答应该控制在一两分钟左右，简要说明你做过些什么，内容并不局限于学术。可以谈谈你的爱好，比如读书、运动、冥想等，也就是谈论任何有助于定义你的东西。然后面试官会把你在自我介绍里谈到的一些东西作为他下一个问题的引子，开启面试的技术部分。





TCP/IP
1. OSI与TCP/IP各层的结构与功能，都有哪些协议。
2. TCP与UDP的区别。
3. TCP报文结构。
4. TCP的三次握手与四次挥手过程，各个状态名称与含义，TIMEWAIT的作用。
5. TCP拥塞控制。
6. TCP滑动窗口与回退N针协议。
7. Http的报文结构。
8. Http的状态码含义。
9. Http request的几种类型。
10. Http1.1和Http1.0的区别
11. Http怎么处理长连接。
12. Cookie与Session的作用于原理。
13. 电脑上访问一个网页，整个过程是怎么样的：DNS、HTTP、TCP、OSPF、IP、ARP。
14. Ping的整个过程。ICMP报文是什么。
15. C/S模式下使用socket通信，几个关键函数。
16. IP地址分类。
17. 路由器与交换机区别。
网络其实大体分为两块，一个TCP协议，一个HTTP协议，只要把这两块以及相关协议搞清楚，一般问题不大。

数据结构与算法
1. 链表与数组。
2. 队列和栈，出栈与入栈。
3. 链表的删除、插入、反向。
4. 字符串操作。
5. Hash表的hash函数，冲突解决方法有哪些。
6. 各种排序：冒泡、选择、插入、希尔、归并、快排、堆排、桶排、基数的原理、平均时间复杂度、最坏时间复杂度、空间复杂度、是否稳定。
7. 快排的partition函数与归并的Merge函数。
8. 对冒泡与快排的改进。
9. 二分查找，与变种二分查找。
10. 二叉树、B+树、AVL树、红黑树、哈夫曼树。
11. 二叉树的前中后续遍历：递归与非递归写法，层序遍历算法。
12. 图的BFS与DFS算法，最小生成树prim算法与最短路径Dijkstra算法。
13. KMP算法。
14. 排列组合问题。
15. 动态规划、贪心算法、分治算法。（一般不会问到）
16. 大数据处理：类似10亿条数据找出最大的1000个数………等等

对于项目经历可能问的问题：
1. XXX（某个比较重要的点）是怎么实现的？
2. 你在项目中遇到的最大的困难是什么，怎么解决的？
3. 项目某个部分考虑的不够全面，如果XXXX，你怎么优化？
4. XXX（一个新功能）需要实现，你有什么思路？

提问环节：
1. 贵公司一向以XXX著称，能不能说明一下公司这方面的特点？
2. 贵公司XXX业务发展很好，这是公司发展的重点么？
3. 对技术和业务怎么看？
4. 贵公司一般的团队是多大，几个人负责一个产品或者业务？
5. 贵公司的开发中是否会使用到一些最新技术？
6. 对新人有没有什么培训，会不会安排导师？
7. 对Full Stack怎么看？
8. 你觉得我有哪些需要提高的地方？


原则：
1. 在面试过程中，良好的礼节、流畅的表达、积极的交流其实都是非常重要的。很多公司可能不光看你的技术水平怎么样，而更看重的是你这个人怎么样的。
2. 很多时候我们都会遇到一个情况，就是面试官的问题我不会，这时候大多数情况下不要马上说我不会，要懂得牵引，例如面试官问我C++的多态原理，我不懂，但我知道java的，哪我可以向面试官解释说我知道java的，类似的这种可以往相关的地方迁移（但是需要注意的是一定不要不懂装懂，被拆穿了是很尴尬的），意思就是你要尽可能的展示自己，表现出你的主动性，向面试官推销自己。
3. 还有就是遇到智力题的时候，不要什么都不说，面试官其实不是在看你的答案，而是在看你的逻辑思维，你只要说出你自己的见解，有一定的思考过程就行。


https://github.com/geekcompany/ResumeSample/blob/master/etc.md
https://github.com/search?p=2&q=%E7%AE%80%E5%8E%86&type=Repositories ﻿






机器学习项目：

http://feed.baidu.com/feed/data/wise/landingpage?s_type=news&dsp=wise&nid=9114129388901394849&n_type=1&p_from=5

https://cloud.tencent.com/developer/article/1110377

E盘

理论：PRML

算法

语言：python源码 自制编译器 pythonic

工具：shell sed awk

netlogo工具

一进门就微笑！！

我提问的环节：
如果我面的是ML岗：“不知道我在的岗位有没有接触到深度学习的机会，我对DL很感兴趣，但是缺乏实战经验，目前的项目是什么？”




投简历：
51job账号 @job$$
智联招聘 _job_1

CVTE https://careers.cvte.com 2ZVTE
拼多多 http://pinduoduo.zhiye.com/ @PDD$
同程艺龙 http://join.ly.com/index/cn/campus/yjszp.html?type=zpgw @elong$
唯品会 http://campus.vip.com 51job账号
多益网络 xz.duoyi.com 2game
thoughtworks https://join.thoughtworks.cn/ 微信登录
oppo http://oppotqp.zhaopin.com/index.html 智联
顺丰 http://campus.sf-tech.com.cn/campusRecruitment/Jobs.html?p=28943577456 智联
珍爱网 http://zhenai.zhiye.com/Portal/Apply/Index @love
华为 @huawei1
好未来 http://job.100tal.com/Portal/Apply/Index @TAL123
科大讯飞 2ifly
新浪 http://career.sina.com.cn/welcome.html @weibo
字节跳动 https://job.bytedance.com/campus/position 微信登录
奇虎360 http://campus.chinahr.com/2019/qihu360/index.html 短信登录
爱奇艺 http://zhaopin.iqiyi.com/resume-school.html @iqiyi$
    状态查询 https://docs.qq.com/doc/BZGTJq1vccCO0iSVTR3jR9RR4tZIjX4XxnZs1TKkQG3IE1bp3EaFsY2Zp0rD4rAQsW1SKVwu3
知乎 https://app.mokahr.com/campus_apply/zhihu#/candidateHome/applications?_k=36tyu9
美团点评 https://campus.meituan.com/apply-record 微信登录
虎牙直播 http://hr.huya.com/ 2huya2
招银网络 @job$$
搜狐 https://www.nowcoder.com/recommand/v2/step1?jobId=1547&ncsr=&callback=/careers/sohucampus/370%3ftype%3d%26ncsr%3d 用的牛客的平台
京东 http://campus.jd.com/web/apply/myjob
远景能源 https://campus.envisioncn.com/dream_par_stu_pc/dist/#/main/resumeInfoOther
贝壳 http://campus.ke.com/Portal/Apply/Index @KE1
携程 http://ctrip.zhiye.com/Portal/Apply/Index @Ctrip123
迅雷 http://campus.xunlei.com/personal_center.html @xunlei321
阿里（国际事业部）


查薪资 https://offernews.cn/



参考：
https://www.jianshu.com/p/fc9b6e1b4041?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation


























自我评价
性格开朗，乐于与人交流，有多次组织学生活动的经验。兴趣爱好广泛，爱好吉他与音乐。
责任心较强，抗压能力良好，善于主动学习，对新知识兴趣强烈。
计算机基础知识良好，算法和数据结构基础扎实。
对机器学习、算法、数学充满兴趣，希望了解万事万物背后运行的原理。

技能
1. 个人博客: protao.github.io
2. 编程工具: 熟练掌握 Python, 以及常用数据处理与机器学习工具包, 如 numpy / matplotlib / pandas / sklearn.
3. 基础知识: 熟悉 linux 上的开发环境，熟悉 bash 脚本。熟悉常用机器学习算法的原理与使用，了解深度学习基本原理与常用网络结构，了解相关数学基础。具有良好的数据结构与算法基础。


异常流量检测技术研究与系统实现
专利的撰写投稿与内网模块的设计开发。
1. 使用开源图嵌入工具 OpenNE 对内网网络结构进行表征学习得到特征。根据内部 HTTP bro 日志，对用户访问模式进行建模，感知可能的威胁行为。
2. 专利《一种随机子域名 DDoS 攻击检测方法》申请号： 201801641482.7

大规模网络日志处理平台
日志的管理维护与 spark job 的参数调优。
1. 对 spark job 主要参数与任务执行时间建立回归模型。基于 pyswarm 包，使用粒子群算法对模型搜索最优点。模型对于小数据量任务的执行时间拟合误差在 5 分钟内，大数据量任务的拟合误差在 20 分钟内，调优后的整体执行时间缩短百分之 40。
2. 部署定时任务，管理每日数据上传并对其进行监控，自动执行每日批处理任务，收集执行时间数据并更新已有数据模型。

基于高斯混合模型的背景提取算法的实现
理解算法并在matlab对算法进行高效实现。
1. matlib 矢量化编程，迭代流程加速至原周期的 1/9。
2. 使用 EM 算法预训练对模型参数进行初始化。对 EM 算法进行微调后，使之适应视频流的在线学习。

基于词嵌入的用户评论情感判别
使用少量带标注的数据，设计一个用户评论情感判别模块。
1. 使用 gensim 中的 word2vec 对语料进行无监督预处理，得到预训练的中文词的 Embedding 层。
2. 使用 keras 来构建基于单层 LSTM 的分类器，在其中使用了预训练的中文词向量 Embedding 层。未细致调参的模型训练集正确率 0.96，测试集正确率 0.90。


轮滑
在轮滑社中学习了轮滑作为了新的技能，迅速的以此为契机融入了丰富多彩的大学生活。



提问：
有没有什么新员工的培养，发展计划
你觉得我怎么样


OQ1：在专业领域目前我最热爱的是统计学习算法领域，我在本科毕业后接触到这个领域并在研一通过选修相关课程和自学相关书籍对其中的基本算法有了一定程度的了解，并积累了相当程度的兴趣，尤其是这几年大热的深度学习领域，在自然语言处理与计算机视觉方面都表现出了不俗的成绩，这也是推动我在算法方面不懈学习的动力之一。但是整个学习阶段重点就在于学习算法、学习理论知识，没有更多的思考，仅限于学习书本上的知识。
到了研二，进入研究室参与相关项目，并将之前学到的算法运用到实践中，这一过程很困难，比我想象的困难，有算法选择的问题，有调参的问题，有数据的问题。这使我开始塌下心想我到底需要什么，这一阶段开始关注基本的算法及其背后的练习，还有相关的数学知识包括统计、优化与矩阵。这时的我没有一味的追逐火热的深度学习，而是更多地关注传统算法与数学基本功。在这个过程中，开始更多的关注一些算法的工具与开源实现，python的机器学习的主流工具及其底层实现，更多的关注内功包括数学原理与模型之间的联系与推广。从宽度上，对于linux上的开发环境包括bash脚本、系统工具等在使用中不断加深了解，因为我认识到了，书本上的算法并不是一切，想成为一个靠谱的算法工程师要文武双全。
对于未来，我希望能够进入一个好的算法团队，利用知识去解决真正的问题，去做禁得住考验，创造价值的算法。希望能够在团队中想前辈学习，与同伴讨论，着眼于一个真正期待解决的问题。另外有一个想法就是多多和大牛参加比赛，自己在打比赛的过程中遇到的瓶颈太多，每次只是得到一个很大众的模型，希望以后可以和大牛学到更多的经验和灵感。

OQ2：印象最深的项目是我在简历中提到的第二个项目，这个项目我其实没有担任一个很重要的角色，但是我觉得这个项目对于我意义重大。
这个项目是和中国移动合作的一个项目，我在参与进项目的时候，主要的工作已经完成了，老师给我的任务是对一个spark job的参数进行优化，缩小执行时间。刚接到这个任务的时候，老师的意思是我手动尝试一些参数，然后选出一个差不多的就可以了，我对这个任务其实是觉得很无聊的，当时刚从研一上课回到实验室中，满心想着把我学到的知识运用起来，但是没想到接到的是一个重复性的工作。
后来在尝试的过程中，发现这实际上就是一个参数搜索的过程呀，在深度学习的优化算法中我学到了很多相关的算法，这个是类似的。但是问题是我要优化的任务没有明确的目标函数，输入参数返回结果需要数个小时，另外根本无法求梯度，也就是说深度学习中的那些优化算法在这里用不上。但是这个思路启发了我，把这个问题抽象成一个数值优化问题。在数值优化中也有无梯度优化算法，但是依然需要大量的计算，而我拿到的需要被优化任务计算又十分耗时。
那么我想到的解决方法就是先批量执行，模拟GridSearch的采样过程，拿到参数和执行时间的对应关系后，将其作为一个回归问题建立模型去拟合，只要拟合的足够好，那么我拿到的模型就不存在计算时间的问题了。拟合的过程不详细说，得到拟合函数后，为了求全局最优点，使用的是粒子群算法去优化，最后解决了老师的问题，将每天的批处理任务的执行时间从40小时降低到了24小时。
这个过程中其实没有用到一些很厉害的算法、很高级的工具，但是是一个做项目的过程，我知道了做项目重要的是利用已有能力去解决目标问题，我知道了要尽可能高的达到目标的需要，在这个过程中利用起了linux的相关工具与bash、利用了python的机器学习工具sklearn与pyswarm包，把理论中的知识转化为现实解决问题的武器，这是我提到这个项目的原因。






















